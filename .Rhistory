groups <- as.character(groups)
for(i in 1:length(groups)){ #for each number
if(nchar(groups[i])==1){ #if the number of characters is 1 (1, 2, 3...)
groups[i] <- paste("G00", groups[i], sep="") #add G00 in front
}
else{ #if the number is not 1 (10, 11, 12...)
groups[i] <- paste("G0", groups[i], sep="") #add G0 in front
}
}
orca_data_sub2_6 <- orca_data_sub2 %>% #filter for the 6 groups
filter(Group.ID == groups[1] | Group.ID == groups[2] | Group.ID == groups[3] |
Group.ID == groups[4] | Group.ID == groups[5] | Group.ID == groups[6])
#Checking number of observations from each group
orca_data_sub2 %>%
group_by(Group.ID) %>%
tally() %>%
arrange(n, desc(n))
#G002, G003 have 1 observation
#G005, G0019, G022, G024, G027, G037, G046 have 2 observations
#Salmon over time
ggplot(orca_data_sub2, aes(Year, CK.oa))+
geom_point()+
geom_line()
ggplot(orca_data_sub2, aes(Year, CK.tr))+
geom_point()+
geom_line()
ggplot(orca_data_sub2, aes(Year, CM))+
geom_point()+
geom_line()
#Lactating females over time in groups
ggplot(orca_data_sub2, aes(Year, FLg))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, FLg))+
geom_point()+
geom_line()+ #improves readability
facet_wrap(~Group.ID)
#Number of individuals in groups
ggplot(orca_data_sub2, aes(Year, Ng))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, Ng))+
geom_point()+
geom_line()+
facet_wrap(~Group.ID)
#pod energetic requirement
ggplot(orca_data_sub2, aes(Year, DPERg))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, DPERg))+
geom_point()+
geom_line()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2, aes(FLg))+
geom_histogram() #histogram of FLg to assess normality
# value = x-mean(x) / 2sd(x)
# descale <- function(x, sd){
#   vals <- c()
#   for(i in 1:length(x)){
#     #vals[i] <- (x[i]-mean(x))/(2*sd)
#     vals[i] <- (x[i]+mean(x))*(2*sd)
#   }
#   return(vals)
# }
#
#
# unscaledFLg <- descale(orca_data_sub2$FLg, 0.73)
#
# unscaledData <- orca_data_sub2 %>%
#   select(FLg) %>%
#   unscale()
#
# unscaledFLg <- unscale(2*orca_data_sub2$FLg)
# unscaledCK.oa <- unscale(2*orca_data_sub2$CK.oa)
orca_data_sub2 %>%
select(CK.oa, Year, Group.ID) %>%
plot()
orca_data_sub2 %>%
select(CK.oa) %>%
summary()
hist(orca_data_sub2$CK.oa)
hist(orca_data_sub2$FLg) #Y is not normally distributed Transform to log?
library(lme4)
library(lmerTest)
CK_FLg_Year<-lmer(FLg~CK.oa+ (1|Year), data = orca_data_sub2, REML= FALSE)
summary (CK_FLg_Year)
CK_FLg_Year_GroupID<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
summary(CK_FLg_Year_GroupID)
plot(CK_FLg_Year_GroupID) # I dont know
# log transforming FLG
orca_data_sub2$FLg <- log(orca_data_sub2$FLg)
CK_FLg_Year_GroupID_logtransform<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
#looks better!
plot(CK_FLg_Year_GroupID_logtransform)
#exponentially transforming FLG
orca_data_sub2$FLg <- exp(orca_data_sub2$FLg)
CK_FLg_Year_GroupID_exptransform<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
#this also looks somewhat better than the original but I think the log one is a better transformation
plot(CK_FLg_Year_GroupID_exptransform)
years_measured<-(c(seq(1980,2010,1)))
#Numbers are in values of Millions of Fish
chum_generator <- function(){
chum_density <- sample(x = seq(0.46,6.17,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chum <- data.frame(years_measured, chum_density) #making data frame for each year and with the random density
return(yearly_chum)
}
chum_generator()
#Okay for reference, sample needs the x (the range to pick from) and then the size (which is how many variables its gonna pick); so don't need a for loop
#Numbers are in values of Millions of Fish
chinook_generator <- function(){
chinook_density <- sample(x = seq(0.13,1.27,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chinook <- data.frame(years_measured, chinook_density) #making data frame for each year and with the random density
return(yearly_chinook)
}
chinook_generator()
salmon_data<- df(chinook_generator, chum_generator)
salmon_data<- df(chinook_generator, chum_generator)
salmon_data<- data.frame(chinook_generator, chum_generator)
salmon_data<- data.frame(chinook_generator(), chum_generator())
View(salmon_data)
View(salmon_data)
salmon<- data.frame(chinook_generator(), chum_generator())
salmon_data<-salmon %>%
select(years_measured,chinook_density,chum_density) %>%
mutate(total_salmon = chinook_density + chum_density)
View(salmon_data)
hist(salmon_data)
hist(salmon_data$chinook_density)
hist(salmon_data$total_salmon)
#Numbers are in values of Millions of Fish
chinook_generator <- function(){
chinook_density <- sample(dnorm(x = seq(0.13,1.27,0.02), size = length(years_measured), replace = T)) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chinook <- data.frame(years_measured, chinook_density) #making data frame for each year and with the random density
return(yearly_chinook)
}
chinook_generator()
#Numbers are in values of Millions of Fish
chinook_generator <- function(){
chinook_density <- sample(x = seq(0.13,1.27,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chinook <- data.frame(years_measured, chinook_density) #making data frame for each year and with the random density
return(yearly_chinook)
}
chinook_generator()
View(orca_data_subset)
group_number<- seq(1,16,1)
pod <- function(){
pod_size <- sample(x = seq(3,38,1), size = 16, replace = T) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
?sample
group_number<- seq(1,16,1)
pod <- function(){
n <- 300
pod_size <- sample(x = seq(3,38,1), size = 16, replace = T) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
?dnorm
group_number<- seq(1,16,1)
pod <- function(){
n <- 300
pod_size <- dnorm(300(sample(x = seq(3,38,1), size = 16, replace = T))) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
group_number<- seq(1,16,1)
pod <- function(){
n <- 300
pod_size <- dnorm(sample(x = seq(3,38,1), size = 16, replace = T)) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
group_number<- seq(1,16,1)
pod <- function(){
n <- 300
pod_size <- sample(x = seq(3,38,1), size = 16, replace = T) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
salmon<- data.frame(chinook_generator(), chum_generator())
salmon_data<-salmon %>%
select(years_measured,chinook_density,chum_density) %>%
mutate(total_salmon = chinook_density + chum_density)
library(here)
library(tidyverse)
library(dplyr)
library(ggfortify)
library(stats)
#library(DMwR)
rep(1,16
rep(1,16)
rep(1,16)
multinom(1, size = 300, prob = rep(1,16))
library(stats)
rmultinom(1, size = 300, prob = rep(1,16))
cbind(rmultinom(1, size = 300, prob = rep(1,16)), 1:16)
pod <- function(){
pod_size<-cbind(rmultinom(1, size = 300, prob = rep(1,16)), 1:16)
#pod_size <- sample(x = seq(3,38,1), size = 16, replace = T) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
pod <- function(){
pod_size<-rmultinom(1, size = 300, prob = rep(1,16))
#pod_size <- sample(x = seq(3,38,1), size = 16, replace = T) #Choosing from 16 total pods
pod_size_by_group <- data.frame(group_number,pod_size )
return(pod_size_by_group)
}
pod()
pod_data<- pod() %>%
mutate(number_repro_females = pod_size * 0.22)
View(pod_data)
pod_data<- pod() %>%
mutate(number_repro_females = round(pod_size * 0.22,0))
View(pod_data)
pod_data %>%
mutate(Lactating_females = round(number_repro_females * 0.2,0))
pod_data<- pod() %>%
mutate(number_repro_females = round(pod_size * 0.22/pod_size,0))
#rounding upwards to get whole numbers
pod_data<- pod() %>%
mutate(number_repro_females = round((pod_size * 0.22)/pod_size,0))
#rounding upwards to get whole numbers
pod_data<- pod() %>%
mutate(number_repro_females = round((pod_size * 0.22)/pod_size),0)
#rounding upwards to get whole numbers
pod_data<- pod() %>%
mutate(number_repro_females = round((pod_size * 0.22)/pod_size,0))
#rounding upwards to get whole number
pod_data<- pod() %>%
mutate(number_repro_females = round(((pod_size * 0.22)/pod_size),0))
#rounding upwards to get whole number
library(here)
library(tidyverse)
library(dplyr)
library(ggfortify)
library(stats)
#library(DMwR)
#Reading in the Data
library(here)
here()
orca_data<- read.csv(here("stredulinsky2021.csv")) #Kaylie/Clara/Madeline Read in
# Exploring
head(orca_data)
glimpse(orca_data)
#okay 25 columns that is a lot.
which(is.na(orca_data))
#no NA's
#Creating Subset
orca_data_subset <- select(orca_data, Year, Group.ID,
CK.oa, CK.tr, CM, DPERg, FLg, FRg, Ng)
head(orca_data_subset)
#Checking for Na's
which(is.na(orca_data_subset))
#okay so it appears we don't have any missing values.
orca_data_sub2 <- orca_data %>%
select(Year, Group.ID, CK.oa, CK.tr, CM, DPERg, FLg, Ng)
#selecting 6 random groups to look at because 56 is hard to see at once
groups <- sample(1:56, 6, replace = F) #sample 6 random numbers from 1-56
groups <- as.character(groups)
for(i in 1:length(groups)){ #for each number
if(nchar(groups[i])==1){ #if the number of characters is 1 (1, 2, 3...)
groups[i] <- paste("G00", groups[i], sep="") #add G00 in front
}
else{ #if the number is not 1 (10, 11, 12...)
groups[i] <- paste("G0", groups[i], sep="") #add G0 in front
}
}
orca_data_sub2_6 <- orca_data_sub2 %>% #filter for the 6 groups
filter(Group.ID == groups[1] | Group.ID == groups[2] | Group.ID == groups[3] |
Group.ID == groups[4] | Group.ID == groups[5] | Group.ID == groups[6])
#Checking number of observations from each group
orca_data_sub2 %>%
group_by(Group.ID) %>%
tally() %>%
arrange(n, desc(n))
#G002, G003 have 1 observation
#G005, G0019, G022, G024, G027, G037, G046 have 2 observations
#Salmon over time
ggplot(orca_data_sub2, aes(Year, CK.oa))+
geom_point()+
geom_line()
ggplot(orca_data_sub2, aes(Year, CK.tr))+
geom_point()+
geom_line()
ggplot(orca_data_sub2, aes(Year, CM))+
geom_point()+
geom_line()
#Lactating females over time in groups
ggplot(orca_data_sub2, aes(Year, FLg))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, FLg))+
geom_point()+
geom_line()+ #improves readability
facet_wrap(~Group.ID)
#Number of individuals in groups
ggplot(orca_data_sub2, aes(Year, Ng))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, Ng))+
geom_point()+
geom_line()+
facet_wrap(~Group.ID)
#pod energetic requirement
ggplot(orca_data_sub2, aes(Year, DPERg))+
geom_point()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2_6, aes(Year, DPERg))+
geom_point()+
geom_line()+
facet_wrap(~Group.ID)
ggplot(orca_data_sub2, aes(FLg))+
geom_histogram() #histogram of FLg to assess normality
# value = x-mean(x) / 2sd(x)
# descale <- function(x, sd){
#   vals <- c()
#   for(i in 1:length(x)){
#     #vals[i] <- (x[i]-mean(x))/(2*sd)
#     vals[i] <- (x[i]+mean(x))*(2*sd)
#   }
#   return(vals)
# }
#
#
# unscaledFLg <- descale(orca_data_sub2$FLg, 0.73)
#
# unscaledData <- orca_data_sub2 %>%
#   select(FLg) %>%
#   unscale()
#
# unscaledFLg <- unscale(2*orca_data_sub2$FLg)
# unscaledCK.oa <- unscale(2*orca_data_sub2$CK.oa)
orca_data_sub2 %>%
select(CK.oa, Year, Group.ID) %>%
plot()
orca_data_sub2 %>%
select(CK.oa) %>%
summary()
hist(orca_data_sub2$CK.oa)
hist(orca_data_sub2$FLg) #Y is not normally distributed Transform to log?
library(lme4)
library(lmerTest)
CK_FLg_Year<-lmer(FLg~CK.oa+ (1|Year), data = orca_data_sub2, REML= FALSE)
summary (CK_FLg_Year)
CK_FLg_Year_GroupID<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
summary(CK_FLg_Year_GroupID)
plot(CK_FLg_Year_GroupID) # I dont know
# log transforming FLG
orca_data_sub2$FLg <- log(orca_data_sub2$FLg)
CK_FLg_Year_GroupID_logtransform<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
#looks better!
plot(CK_FLg_Year_GroupID_logtransform)
#exponentially transforming FLG
orca_data_sub2$FLg <- exp(orca_data_sub2$FLg)
CK_FLg_Year_GroupID_exptransform<-lmer(FLg~CK.oa + (1|Year) + (1|Group.ID), data = orca_data_sub2, REML= FALSE)
#this also looks somewhat better than the original but I think the log one is a better transformation
plot(CK_FLg_Year_GroupID_exptransform)
years_measured<-(c(seq(1980,2010,1)))
#Numbers are in values of Millions of Fish
chum_generator <- function(){
chum_density <- sample(x = seq(0.46,6.17,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chum <- data.frame(years_measured, chum_density) #making data frame for each year and with the random density
return(yearly_chum)
}
chum_generator()
#Okay for reference, sample needs the x (the range to pick from) and then the size (which is how many variables its gonna pick); so don't need a for loop
#Numbers are in values of Millions of Fish
chinook_generator <- function(){
chinook_density <- sample(x = seq(0.13,1.27,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chinook <- data.frame(years_measured, chinook_density) #making data frame for each year and with the random density
return(yearly_chinook)
}
chinook_generator()
salmon<- data.frame(chinook_generator(), chum_generator())
salmon_data<-salmon %>%
select(years_measured,chinook_density,chum_density) %>%
mutate(total_salmon = chinook_density + chum_density)
hist(salmon_data$total_salmon)
pod <- function(){
pod_size<-rmultinom(1, size = 300, prob = rep(1,16))
#multinorm to make sure orcas add to 300, repeat 16 times
pod_size_by_group <- data.frame(group_number,pod_size ) #puttin gin dataframe
return(pod_size_by_group)
}
pod()
pod_data<- pod() %>%
mutate(number_repro_females = round(((pod_size * 0.22)/pod_size),0))
pod <- function(){
pod_size<-rmultinom(1, size = 300, prob = rep(1,16))
#multinorm to make sure orcas add to 300, repeat 16 times
pod_size_by_group <- data.frame(group_number,pod_size ) #puttin gin dataframe
return(pod_size_by_group)
}
pod()
group_number(1,16,1)
group_number<-seq(1,16,1)
pod <- function(){
pod_size<-rmultinom(1, size = 300, prob = rep(1,16))
#multinorm to make sure orcas add to 300, repeat 16 times
pod_size_by_group <- data.frame(group_number,pod_size ) #puttin gin dataframe
return(pod_size_by_group)
}
pod()
pod_data<- pod() %>%
mutate(number_repro_females = round(((pod_size * 0.22)/pod_size),0))
#rounding upwards to get whole number
pod_data<- pod() %>%
mutate(number_repro_females = round(((pod_size * 0.22)/pod_size),0))
#rounding upwards to get whole number
pod_data %>%
mutate(Lactating_females = round(number_repro_females * 0.2,0))
pod_data<- pod() %>%
mutate(number_repro_females = round(pod_size * 0.22,0))
#rounding upwards to get whole number
pod_data %>%
mutate(Lactating_females = round(number_repro_females * 0.2,0))
pod_data %>%
mutate(Lactating_females = round(number_repro_females * 0.2,0))
pod_data %>%
mutate(Lactating_females = round(number_repro_females * 0.2,0))
?rbinom
for(i in 1:nrow(pod_data)){
rbinom(1,pod_data$number_repro_females, prob = 0.2)
}
list <- c()
for(i in 1:nrow(pod_data)){
list[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
list
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
pod_data %>%
mutate(Lactating_females = Lactating_females())
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
pod_data %>%
mutate(Lactating_females = Lactating_females)
pod_data
pod_data %>%
mutate(Lactating_females = Lactating_females)
pod_data
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
pod_data_2<-pod_data %>%
mutate(Lactating_females = Lactating_females)
pod_data_2
group_number<-seq(1,16,1)
pod <- function(){
pod_size<-rmultinom(1, size = 300, prob = rep(1,16))
#multinorm to make sure orcas add to 300, repeat 16 times
pod_size_by_group <- data.frame(group_number,pod_size ) #puttin gin dataframe
return(pod_size_by_group)
}
pod()
pod_data<- pod() %>%
mutate(number_repro_females = round(pod_size * 0.22,0))
#rounding upwards to get whole number
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
Lactating_females
pod_data_2<-pod_data %>%
mutate(Lactating_females = Lactating_females)
pod_data_2
