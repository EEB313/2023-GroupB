#Numbers are in values of Millions of Fish
chum_generator <- function(){
chum_density <- sample(x = seq(0.46,6.17,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chum <- data.frame(years_measured, chum_density) #making data frame for each year and with the random density
return(yearly_chum)
}
chum_generator()
#Okay for reference, sample needs the x (the range to pick from) and then the size (which is how many variables its gonna pick); so don't need a for loop
#Numbers are in values of Millions of Fish
chinook_generator <- function(){
chinook_density <- sample(x = seq(0.13,1.27,0.02), size = length(years_measured), replace = T) #choosing a random value between the range of 0.46 to 6.17, Replacing is True
yearly_chinook <- data.frame(years_measured, chinook_density) #making data frame for each year and with the random density
return(yearly_chinook)
}
chinook_generator()
salmon <- data.frame(chinook_generator(), chum_generator())
salmon_data<-salmon %>%
select(years_measured,chinook_density,chum_density) %>%
mutate(total_salmon = chinook_density + chum_density)
hist(salmon_data$total_salmon)
group_number<-seq(1,16,1)
pod <- function(){
n<- rpois(1, lambda = 300)
pod_size<-rmultinom(1, size = n, prob = rep(1,16))
#multinorm to make sure orcas add to 300, repeat 16 times
pod_size_by_group <- data.frame(group_number,pod_size ) #puttin gin dataframe
return(pod_size_by_group)
}
pod()
pod_data<- pod() %>%
mutate(number_repro_females = round(pod_size * 0.22,0))
#rounding upwards to get whole number
Lactating_females <- c()
for(i in 1:nrow(pod_data)){
Lactating_females[i] <- rbinom(1,pod_data$number_repro_females[i], prob = 0.2)
}
# Lactating_females
pod_data_2<-pod_data %>%
mutate(Lactating_females = Lactating_females)
# pod_data_2
#n <- 31
data_Gen <- function(beta1, beta2){
pod_data_Year <- data.frame()
#Salmon Data
#generate salmon data in a dataframe
salmon <- data.frame(chinook_generator(), chum_generator())
salmon_data<-salmon %>%  #format data frame, add total salmon
select(years_measured,chinook_density,chum_density) %>%
mutate(total_salmon = chinook_density + chum_density)
#fitting the salmon data to the orca data
rep_salmon_data <- data.frame(chinook_density = c(),
chum_density = c(),
total_salmon = c())
x <- 1
i <- 1
while(x < 496){
#for each 16 rows of the empty data frame, add the corresponding year
#from salmon data
rep_salmon_data[c(x:(x+16)),1] <- salmon_data[i,2]
rep_salmon_data[c(x:(x+16)),2] <- salmon_data[i,3]
rep_salmon_data[c(x:(x+16)),3] <- salmon_data[i,4]
x <- x+16 #increase rows in repeated salmon data
i <- i+1 #increase row in salmon data
}
rep_salmon_data <- rep_salmon_data[-c(497),]
colnames(rep_salmon_data) <- c("chinook_abundace", "chum_abundance", "total_salmon")
# Orca Data Generation
group_number<-seq(1,16,1)
n <- 31
for(i in 1:n){ #generate pod sizes
pod <- function(){
#poisson distribution to choose total population each year
s <- rpois(1, lambda = 300)
#multinomial distribution keeps orcas at total pop size, make 16 pods
pod_size <- rmultinom(1, size = s, prob = rep(1,16))
year <- i+1979
pod_size_by_group <- data.frame(year, group_number, pod_size)
return(pod_size_by_group)
}
# make the number of lactating females
pod_data <- pod() #call pod function above to make pods
# %>% mutate(number_repro_females = round(pod_size * 0.22,0)) - *removed*
Lactating_females <- c()
for(i in 1:nrow(pod_data)){ #calculate lactating females
#beta - makes lactating females dependent on salmon + pod size
Lactating_females[i] <- rpois(1,
lambda = beta1*(pod_data$pod_size[i])+
beta2*rep_salmon_data$total_salmon[i])
#so: determine lactating females from pod size + additional amount
#w/ more salmon
#
# originally was: rbinom(1, pod_data$number_repro_females, prob = 0.2)
}
pod_data_2<-pod_data %>%
mutate(lactating_females = Lactating_females)
pod_data_Year <- rbind(pod_data_Year, pod_data_2)
}
#combining the dataframe
gen_Data <- pod_data_Year %>%
mutate(chinook_abundance = c(rep_salmon_data[,1])) %>%
mutate(chum_abundance = c(rep_salmon_data[,2])) %>%
mutate(total_salmon = c(rep_salmon_data[,3]))
return(gen_Data)
}
#year_pod_data <- lactating_Orca_Data_Gen(31)
#fitting the generated salmon data to proper rows for orcas
# rep_salmon_data <- data.frame(chinook_density = c(), chum_density = c(), total_salmon = c())
# x <- 1
# i <- 1
# while(x < nrow(year_pod_data)){
#   #rep_salmon_data[c(x:(x+16)),1] <- salmon_data[i,1]
#   rep_salmon_data[c(x:(x+16)),1] <- salmon_data[i,2]
#   rep_salmon_data[c(x:(x+16)),2] <- salmon_data[i,3]
#   rep_salmon_data[c(x:(x+16)),3] <- salmon_data[i,4]
#   x <- x+16
#   i <- i+1
# }
# rep_salmon_data <- rep_salmon_data[-c(497),]
#
# #combining the dataframe
# gen_Data <- year_pod_data %>%
#   mutate(chinook_abundance = c(rep_salmon_data[,1])) %>%
#   mutate(chum_abundance = c(rep_salmon_data[,2])) %>%
#   mutate(total_salmon = c(rep_salmon_data[,3]))
#
# ggplot(gen_Data, aes(lactating_females)) +
#   geom_histogram()
#
# ggplot(gen_Data, aes(lactating_females)) +
#   geom_histogram() +
#   facet_wrap(group_number)
# beta1 <- 0.22 # seq(0.2, 0.24, 0.01)
# beta2 <- 0.1 # seq(-0.5, 0.5, 0.1)
# beta <- c(beta1, beta2)
params <- expand.grid(beta1 = seq(0.2,0.24,0.01),
beta2 = c(0.0000001,0.00001,0.0001,0.001,0.01,0.1))
#beta2 = seq(0.01, 1, 0.01)) # - another option maybe?
#beta needs to be a vector with two entries, 1st beta1, 2nd beta2
power_poisson <- function(beta){
sims <- 1000 #simulation number
pValSalmon <- c()
pValPod <- c()
SalmonEffect <- c()
PodEffect <- c()
models <- NULL
predictions <- NULL
Intercept <- c()
for(i in 1:sims){ #loop for the number of simulations
#for(i in 1:nrow(beta)){
data <- data_Gen(beta[1], beta[2]) #generate the orca data for 31 years (1980-2010)
#data <- data_Gen(params[i,1], params[i,2])
#make a glm
model <- glmer(lactating_females~total_salmon+pod_size+
(1|group_number)+(1|year),
family = poisson, data)
#save the effect salmon has
models[[i]] <- model
#prediction[i] <- predict(model)
predictions[[i]] <- cbind(lact_fem_predict=
predict(models[[i]],
newdata = data.frame(
total_salmon=data$total_salmon,
pod_size = data$pod_size,
year=data$year,
group_number=data$group_number)),
total_salmon = data$total_salmon,
year = data$year,
pod_size = data$pod_size,
group_number = data$group_number,
index = i)
SalmonEffect[i] <- summary(model)$coefficient[2,1]
PodEffect[i] <- summary(model)$coefficient[3,1]
Intercept[i] <- summary(model)$coefficient[1,1] #save intercept
pValSalmon[i] <- summary(model)$coefficient[2,4]
pValPod[i] <- summary(model)$coefficient[3,4] #save model significance
#}
}
powEstSalmon <- length(which(pValSalmon<0.05))/length(pValSalmon)
powEstPod <- length(which(pValPod<0.05))/length(pValPod)
return(list(SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
}
#results <- power_poisson(beta)
#results <- power_poisson(params)
PowersSalmon <- c()
powEstPod <- c()
overall_Results <- NULL
for (i in 1:nrow(params)){
beta <- c(params[i,1], params[i,2])
result <- power_poisson(beta)
overall_Results[i] <- result
PowersSalmon[i] <- result[[4]]
powEstPod[i] <- result[[5]]
}
print(paste("Salmon Power Estimate: ", overall_Results[4]))
minSaEffect <- min(as.data.frame(overall_Results[1]))
maxSaEffect <- max(as.data.frame(overall_Results[1]))
print(paste("Range of Salmon Effects: ", minSaEffect, "-", maxSaEffect))
print(paste("Pod Power Estimate: ", overall_Results[5]))
minPodEffect <- min(as.data.frame(overall_Results[2]))
maxPodEffect <- max(as.data.frame(overall_Results[2]))
print(paste("Range of Pod Size Effects: ", minPodEffect, "-", maxPodEffect))
# cbind(SalmonEffect = results[[1]]) %>%
#   ggplot(aes(x = SalmonEffect))+
#   geom_histogram()
# PowersSalmon <- c()
# powEstPod <- c()
#
# for (i in 1:nrow(params)){
#   beta <- c(params[i,1], params[i,2])
#   result <- power_poisson(beta)
#   PowersSalmon[i] <- result[[4]]
#   powEstPod[i] <- result[[5]]
# }
cbind(PowersSalmon, powEstPod, params)
seq(min(as.data.frame(results[[6]])$total_salmon),
max(as.data.frame(results[[6]])$total_salmon), length = 1000) -> salmons
View(params)
View(CK_FLg_Year)
cbind(PowersSalmon, powEstPod, params)
seq(min(as.data.frame(result[[6]])$total_salmon),
max(as.data.frame(result[[6]])$total_salmon), length = 1000) -> salmons
seq(min(as.data.frame(result[[6]])$pod_size),
max(as.data.frame(result[[6]])$pod_size), length = 1000) -> pods
salmon_lines <- NULL
pod_lines <- NULL
for (i in 1:length(result[[3]])){
lines1 <- as.data.frame(cbind(salmons = salmons)) %>%
mutate(lact_prediction = result[[3]][i]+
result[[1]][i]*salmons)
lines1 <- cbind(lines1, index_model = i)
salmon_lines <- rbind(salmon_lines, lines1)
# POD SIZE IS CONSTANT HERE
lines2 <- as.data.frame(cbind(pods = pods)) %>%
mutate(lact_prediction = result[[3]][i]+
result[[2]][i]*pods)
lines2 <- cbind(lines2, index_model = i)
pod_lines <- rbind(pod_lines, lines2)
# SALMON CONSTANT
}
as.data.frame(salmon_lines) %>%
ggplot(aes(x = salmons, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
theme_bw()
as.data.frame(pod_lines) %>%
ggplot(aes(x = pods, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
theme_bw()
as.data.frame(salmon_lines) %>%
ggplot(aes(x = salmons, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Salmon Abundance (millions of fish", y ="Predicted Number of Lactating Females per Pod" , title = "Effect of Salmon Abundance on Lactating Females")+
geom_smooth(method = lm)+
theme_bw()
as.data.frame(pod_lines) %>%
ggplot(aes(x = pods, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
geom_smooth(method = lm)+
labs(x = "Size of Pod", y = "Predicted Number of Lactating Females", title = "Pod Size on Number of Lactating Females")
theme_bw()
summary(predictions)
predictions
summary(result)
summary(result[6])
seq(min(as.data.frame(result[[6]])$total_salmon),
max(as.data.frame(result[[6]])$total_salmon), length = 1000) -> salmons
seq(min(as.data.frame(result[[6]])$total_salmon),
seq(min(as.data.frame(result[[6]])$total_salmon)
seq(min(as.data.frame(result[[6]])$total_salmon),
seq(min(as.data.frame(result[[6]])$total_salmon),
max(as.data.frame(result[[6]])$total_salmon), length = 1000) -> salmons
seq(min(as.data.frame(result[[6]])$total_salmon),
max(as.data.frame(result[[6]])$total_salmon), length = 1000) -> salmons
salmons
print(paste("Salmon Power Estimate: ", overall_Results[4]))
as.data.frame(pod_lines) %>%
ggplot(aes(x = pods, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Size of Pod", y = "Predicted Number of Lactating Females", title = "Pod Size on Number of Lactating Females")+
theme_bw()
SalmonEffect[i]
cbind(PowersSalmon, powEstPod, params) # Creating Dataframe of Powers at various Beta levels.
seq(min(as.data.frame(result[[6]])$total_salmon),
max(as.data.frame(result[[6]])$total_salmon), length = 1000) -> salmons
seq(min(as.data.frame(result[[6]])$pod_size),
max(as.data.frame(result[[6]])$pod_size), length = 1000) -> pods
salmon_lines <- NULL
pod_lines <- NULL
for (i in 1:length(result[[3]])){
lines1 <- as.data.frame(cbind(salmons = salmons)) %>%
mutate(lact_prediction = result[[3]][i]+
result[[1]][i]*salmons)
lines1 <- cbind(lines1, index_model = i)
salmon_lines <- rbind(salmon_lines, lines1)
# POD SIZE IS CONSTANT HERE
lines2 <- as.data.frame(cbind(pods = pods)) %>%
mutate(lact_prediction = result[[3]][i]+
result[[2]][i]*pods)
lines2 <- cbind(lines2, index_model = i)
pod_lines <- rbind(pod_lines, lines2)
# SALMON CONSTANT
}
as.data.frame(salmon_lines) %>%
ggplot(aes(x = salmons, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Salmon Abundance (millions of fish)", y ="Predicted Number of Lactating Females per Pod" , title = "Effect of Salmon Abundance on Lactating Females")+
theme_bw()
as.data.frame(pod_lines) %>%
ggplot(aes(x = pods, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Size of Pod", y = "Predicted Number of Lactating Females", title = "Pod Size on Number of Lactating Females")+
theme_bw()
View(salmon_lines)
as.data.frame(salmon_lines) %>%
ggplot(aes(x = salmons, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Salmon Abundance (millions of fish)", y ="Predicted Number of Lactating Females per Pod" , title = "Effect of Salmon Abundance on Lactating Females")+
geom_line(aes(x = mean(salmons), y = mean(lact_prediction)))+
theme_bw()
as.data.frame(salmon_lines) %>%
ggplot(aes(x = salmons, y = lact_prediction, group = index_model))+
geom_line(color = "gray")+
labs(x = "Salmon Abundance (millions of fish)", y ="Predicted Number of Lactating Females per Pod" , title = "Effect of Salmon Abundance on Lactating Females")+
geom_line(aes(x = mean(salmons), y = mean(lact_prediction)), colour = "blue")+
theme_bw()
mean(salmons),
mean(salmons)
#Making Average line
mean(pods)
mean(lact_prediction)
mean(lact_prediction)
#Making Average line
mean(pod_lines$pods) #22
mean(pod_lines$lact_prediction)
print(paste("Salmon Power Estimate: ", overall_Results[4]))
overall_Results <- NULL
overall_Results
Intercept
power_poisson <- function(beta){
sims <- 10 #simulation number
pValSalmon <- c()
pValPod <- c()
SalmonEffect <- c()
PodEffect <- c()
models <- NULL
predictions <- NULL
Intercept <- c()
for(i in 1:sims){ #loop for the number of simulations
#for(i in 1:nrow(beta)){
data <- data_Gen(beta[1], beta[2]) #generate the orca data for 31 years (1980-2010)
#data <- data_Gen(params[i,1], params[i,2])
#make a glm with lactating females as (y), and fixed effects total_salmon and pod_size as (x). Random effects arr year and group_number
model <- glmer(lactating_females~total_salmon+pod_size+
(1|group_number)+(1|year),
family = poisson, data)
#save the effect salmon has
models[[i]] <- model
#prediction[i] <- predict(model)
predictions[[i]] <- cbind(lact_fem_predict=
predict(models[[i]],
newdata = data.frame(
total_salmon=data$total_salmon,
pod_size = data$pod_size,
year=data$year,
group_number=data$group_number)),
total_salmon = data$total_salmon,
year = data$year,
pod_size = data$pod_size,
group_number = data$group_number,
index = i)
SalmonEffect[i] <- summary(model)$coefficient[2,1]
PodEffect[i] <- summary(model)$coefficient[3,1]
Intercept[i] <- summary(model)$coefficient[1,1] #save intercept
pValSalmon[i] <- summary(model)$coefficient[2,4]
pValPod[i] <- summary(model)$coefficient[3,4] #save model significance
#}
}
powEstSalmon <- length(which(pValSalmon<0.05))/length(pValSalmon)
powEstPod <- length(which(pValPod<0.05))/length(pValPod)
return(list(SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
}
Intercept[i]
Intercept[]
power_poisson <- function(beta){
sims <- 10 #simulation number
pValSalmon <- c()
pValPod <- c()
SalmonEffect <- c()
PodEffect <- c()
models <- NULL
predictions <- NULL
Intercept <- c()
for(i in 1:sims){ #loop for the number of simulations
#for(i in 1:nrow(beta)){
data <- data_Gen(beta[1], beta[2]) #generate the orca data for 31 years (1980-2010)
#data <- data_Gen(params[i,1], params[i,2])
#make a glm with lactating females as (y), and fixed effects total_salmon and pod_size as (x). Random effects arr year and group_number
model <- glmer(lactating_females~total_salmon+pod_size+
(1|group_number)+(1|year),
family = poisson, data)
#save the effect salmon has
models[[i]] <- model
#prediction[i] <- predict(model)
predictions[[i]] <- cbind(lact_fem_predict=
predict(models[[i]],
newdata = data.frame(
total_salmon=data$total_salmon,
pod_size = data$pod_size,
year=data$year,
group_number=data$group_number)),
total_salmon = data$total_salmon,
year = data$year,
pod_size = data$pod_size,
group_number = data$group_number,
index = i)
SalmonEffect[i] <- summary(model)$coefficient[2,1]
PodEffect[i] <- summary(model)$coefficient[3,1]
Intercept[i] <- summary(model)$coefficient[1,1] #save intercept
print(Intercept[i])
pValSalmon[i] <- summary(model)$coefficient[2,4]
pValPod[i] <- summary(model)$coefficient[3,4] #save model significance
#}
}
powEstSalmon <- length(which(pValSalmon<0.05))/length(pValSalmon)
powEstPod <- length(which(pValPod<0.05))/length(pValPod)
return(list(SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
}
print(Intercept[i])
return(list(Intercept[i],SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
for(i in 1:sims){ #loop for the number of simulations
#for(i in 1:nrow(beta)){
data <- data_Gen(beta[1], beta[2]) #generate the orca data for 31 years (1980-2010)
#data <- data_Gen(params[i,1], params[i,2])
#make a glm with lactating females as (y), and fixed effects total_salmon and pod_size as (x). Random effects arr year and group_number
model <- glmer(lactating_females~total_salmon+pod_size+
(1|group_number)+(1|year),
family = poisson, data)
#save the effect salmon has
models[[i]] <- model
#prediction[i] <- predict(model)
predictions[[i]] <- cbind(lact_fem_predict=
predict(models[[i]],
newdata = data.frame(
total_salmon=data$total_salmon,
pod_size = data$pod_size,
year=data$year,
group_number=data$group_number)),
total_salmon = data$total_salmon,
year = data$year,
pod_size = data$pod_size,
group_number = data$group_number,
index = i)
SalmonEffect[i] <- summary(model)$coefficient[2,1]
PodEffect[i] <- summary(model)$coefficient[3,1]
Intercept[i] <- summary(model)$coefficient[1,1] #save intercept
pValSalmon[i] <- summary(model)$coefficient[2,4]
pValPod[i] <- summary(model)$coefficient[3,4] #save model significance
#}
}
power_poisson <- function(beta){
sims <- 10 #simulation number
pValSalmon <- c()
pValPod <- c()
SalmonEffect <- c()
PodEffect <- c()
models <- NULL
predictions <- NULL
Intercept <- c()
for(i in 1:sims){ #loop for the number of simulations
#for(i in 1:nrow(beta)){
data <- data_Gen(beta[1], beta[2]) #generate the orca data for 31 years (1980-2010)
#data <- data_Gen(params[i,1], params[i,2])
#make a glm with lactating females as (y), and fixed effects total_salmon and pod_size as (x). Random effects arr year and group_number
model <- glmer(lactating_females~total_salmon+pod_size+
(1|group_number)+(1|year),
family = poisson, data)
#save the effect salmon has
models[[i]] <- model
#prediction[i] <- predict(model)
predictions[[i]] <- cbind(lact_fem_predict=
predict(models[[i]],
newdata = data.frame(
total_salmon=data$total_salmon,
pod_size = data$pod_size,
year=data$year,
group_number=data$group_number)),
total_salmon = data$total_salmon,
year = data$year,
pod_size = data$pod_size,
group_number = data$group_number,
index = i)
SalmonEffect[i] <- summary(model)$coefficient[2,1]
PodEffect[i] <- summary(model)$coefficient[3,1]
Intercept[i] <- summary(model)$coefficient[1,1] #save intercept
pValSalmon[i] <- summary(model)$coefficient[2,4]
pValPod[i] <- summary(model)$coefficient[3,4] #save model significance
#}
}
powEstSalmon <- length(which(pValSalmon<0.05))/length(pValSalmon)
powEstPod <- length(which(pValPod<0.05))/length(pValPod)
return(list(Intercept[i],SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
}
Intercept
return(list(SalmonEffect, PodEffect, Intercept,
powEstSalmon, powEstPod, do.call(rbind, predictions)))
View(params)
power_poisson()
power_poisson(beta)
